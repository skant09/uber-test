{"version":3,"sources":["webpack:///./src/app/service/movies/mock-heroes.ts","webpack:///./src/app/service/movies/movie.service.ts","webpack:///./src/app/service/question/question.service.ts","webpack:///./src async","webpack:///./src/main.ts","webpack:///./src/app/app.component.ts","webpack:///./src/app/app.module.ts","webpack:///./src/app/components/jiffleNow/jiffle-now.component.ts","webpack:///./src/app/components/pageNotFound/not-found.component.ts","webpack:///./src/app/components/simple-form/simple-form.component.ts","webpack:///./src/app/pipes/number2alphabet.ts","webpack:///./src/environments/environment.ts","webpack:///./src/app/app.component.scss","webpack:///./src/app/components/jiffleNow/jiffleNow.scss","webpack:///./src/app/components/simple-form/simple-form.component.scss","webpack:///./src/app/app.component.html","webpack:///./src/app/components/jiffleNow/jiffleNow.html","webpack:///./src/app/components/simple-form/simple-form.component.html"],"names":[],"mappings":";;;;;;;AAAA;IACE,eACS,EAAU,EACV,IAAY,EACZ,QAAkB,EAClB,MAAc,EACd,GAAW,EACX,GAAW;QALX,OAAE,GAAF,EAAE,CAAQ;QACV,SAAI,GAAJ,IAAI,CAAQ;QACZ,aAAQ,GAAR,QAAQ,CAAU;QAClB,WAAM,GAAN,MAAM,CAAQ;QACd,QAAG,GAAH,GAAG,CAAQ;QACX,QAAG,GAAH,GAAG,CAAQ;IAChB,CAAC;IACP,YAAC;AAAD,CAAC;;;;;;;;;;;;;;;;;;;;;;;;;;;;ACTyC;AACI;AAEF;AACZ;AACF;AAEO;AAIrC;IAGE,sBAAoB,IAAU;QAAV,SAAI,GAAJ,IAAI,CAAM;QAFtB,aAAQ,GAAG,4CAA4C,CAAC;IAGhE,CAAC;IAEM,gCAAS,GAAhB;QACE,MAAM,CAAC,IAAI,CAAC,IAAI,CAAC,GAAG,CAAC,IAAI,CAAC,QAAQ,CAAC;aAChC,GAAG,CAAC,IAAI,CAAC,WAAW,CAAC;aACrB,KAAK,CAAC,IAAI,CAAC,WAAW,CAAC,CAAC;IAC7B,CAAC;IAEO,kCAAW,GAAnB,UAAoB,GAAa;QAC/B,IAAM,MAAM,GAAG,IAAI,SAAS,EAAE,CAAC;QAC/B,IAAM,IAAI,GAAG,MAAM,CAAC,eAAe,CAAC,GAAG,CAAC,IAAI,EAAE,EAAE,iBAAiB,CAAC,CAAC;QACnE,IAAM,OAAO,GAAG,IAAI,CAAC,gBAAgB,CAAC,kBAAkB,CAAC,CAAC;QAC1D,IAAM,MAAM,GAAG,EAAE,CAAC;QAClB,GAAG,CAAC,CAAC,IAAI,CAAC,GAAG,CAAC,EAAE,CAAC,GAAG,OAAO,CAAC,MAAM,EAAE,CAAC,EAAE,EAAE,CAAC;YACxC,IAAM,KAAK,GAAG,OAAO,CAAC,CAAC,CAAC,CAAC,oBAAoB,CAAC,OAAO,CAAC,CAAC,CAAC,CAAC,CAAC,SAAS,CAAC;YACpE,IAAM,MAAM,GAAG,OAAO,CAAC,CAAC,CAAC,CAAC,oBAAoB,CAAC,QAAQ,CAAC,CAAC,CAAC,CAAC,CAAC,SAAS,CAAC;YACtE,IAAI,QAAQ,GAAG,OAAO,CAAC,CAAC,CAAC,CAAC,oBAAoB,CAAC,WAAW,CAAC,CAAC,CAAC,CAAC,CAAC,SAAS,CAAC;YACzE,QAAQ,GAAG,QAAQ,GAAG,QAAQ,GAAG,IAAI,CAAC;YACtC,IAAM,MAAM,GAAG,IAAI,CAAC,GAAG,CAAC,MAAM,CAAC,MAAM,GAAG,CAAC,EAAE,CAAC,CAAC,CAAC;YAC9C,EAAE,CAAC,CAAC,MAAM,CAAC,MAAM,CAAC,IAAI,KAAK,KAAK,MAAM,CAAC,MAAM,CAAC,CAAC,IAAI,CAAC,CAAC,CAAC;gBACpD,MAAM,CAAC,MAAM,CAAC,CAAC,UAAU,CAAC,CAAC,IAAI,CAAC,QAAQ,CAAC,CAAC;YAC5C,CAAC;YAAC,IAAI,CAAC,CAAC;gBACN,MAAM,CAAC,IAAI,CAAC,IAAI,2DAAK,CAAC,CAAC,EAAE,KAAK,EAAE,CAAC,QAAQ,CAAC,EAAE,MAAM,EAAE,OAAO,EAAE,CAAC,QAAQ,CAAC,CAAC,CAAC;YAC3E,CAAC;QACH,CAAC;QACD,MAAM,CAAC,MAAM,CAAC;IAChB,CAAC;IAGO,kCAAW,GAAnB,UAAoB,KAAqB;QACvC,oEAAoE;QACpE,IAAI,MAAc,CAAC;QACnB,EAAE,CAAC,CAAC,KAAK,YAAY,+DAAQ,CAAC,CAAC,CAAC;YAC9B,IAAM,IAAI,GAAG,KAAK,CAAC,IAAI,EAAE,IAAI,EAAE,CAAC;YAChC,IAAM,GAAG,GAAG,IAAI,CAAC,KAAK,IAAI,IAAI,CAAC,SAAS,CAAC,IAAI,CAAC,CAAC;YAC/C,MAAM,GAAM,KAAK,CAAC,MAAM,YAAM,KAAK,CAAC,UAAU,IAAI,EAAE,UAAI,GAAK,CAAC;QAChE,CAAC;QAAC,IAAI,CAAC,CAAC;YACN,MAAM,GAAG,KAAK,CAAC,OAAO,GAAG,KAAK,CAAC,OAAO,GAAG,KAAK,CAAC,QAAQ,EAAE,CAAC;QAC5D,CAAC;QACD,OAAO,CAAC,KAAK,CAAC,MAAM,CAAC,CAAC;QACtB,MAAM,CAAC,2DAAU,CAAC,KAAK,CAAC,MAAM,CAAC,CAAC;IAClC,CAAC;IA9CH;QAAC,gFAAU,EAAE;;oBAAA;IA+Cb,mBAAC;;AAAD,CAAC;;;;;;;;;;;;;;;;;;;;;;;;;;;ACzDyC;AACI;AAEF;AACZ;AACF;AAM9B;IAGE,yBAAoB,IAAU;QAAV,SAAI,GAAJ,IAAI,CAAM;QAFtB,gBAAW,GAAG,yBAAyB,CAAC;QAG9C,IAAI,CAAC,WAAW,IAAI,kGAAkG,CAAC;IACzH,CAAC;IAEM,sCAAY,GAAnB;QACE,MAAM,CAAC,IAAI,CAAC,IAAI,CAAC,GAAG,CAAC,IAAI,CAAC,WAAW,CAAC;aACnC,GAAG,CAAC,IAAI,CAAC,WAAW,CAAC;aACrB,KAAK,CAAC,IAAI,CAAC,WAAW,CAAC,CAAC;IAC7B,CAAC;IAEO,qCAAW,GAAnB,UAAoB,GAAa;QAC/B,IAAM,SAAS,GAAG,GAAG,CAAC,IAAI,EAAE,CAAC;QAC7B,SAAS,CAAC,OAAO,CAAC,UAAC,CAAC,EAAE,CAAC,IAAK,QAAC,CAAC,EAAE,GAAG,CAAC,EAAR,CAAQ,CAAC,CAAC;QACtC,MAAM,CAAC,SAAS,CAAC;IACnB,CAAC;IAGO,qCAAW,GAAnB,UAAoB,KAAqB;QACvC,oEAAoE;QACpE,IAAI,MAAc,CAAC;QACnB,EAAE,CAAC,CAAC,KAAK,YAAY,+DAAQ,CAAC,CAAC,CAAC;YAC9B,IAAM,IAAI,GAAG,KAAK,CAAC,IAAI,EAAE,IAAI,EAAE,CAAC;YAChC,IAAM,GAAG,GAAG,IAAI,CAAC,KAAK,IAAI,IAAI,CAAC,SAAS,CAAC,IAAI,CAAC,CAAC;YAC/C,MAAM,GAAM,KAAK,CAAC,MAAM,YAAM,KAAK,CAAC,UAAU,IAAI,EAAE,UAAI,GAAK,CAAC;QAChE,CAAC;QAAC,IAAI,CAAC,CAAC;YACN,MAAM,GAAG,KAAK,CAAC,OAAO,GAAG,KAAK,CAAC,OAAO,GAAG,KAAK,CAAC,QAAQ,EAAE,CAAC;QAC5D,CAAC;QACD,MAAM,CAAC,2DAAU,CAAC,KAAK,CAAC,MAAM,CAAC,CAAC;IAClC,CAAC;IAhCH;QAAC,gFAAU,EAAE;;uBAAA;IAiCb,sBAAC;;AAAD,CAAC;;;;;;;;AC3CD;AACA;AACA;AACA,uCAAuC,WAAW;AAClD;AACA;AACA;;;;;;;;;;;;;;ACN0E;AAC5B;AACU;AACZ;AAE5C,EAAE,CAAC,CAAC,8EAAW,CAAC,UAAU,CAAC,CAAC,CAAC;IAC3B,oFAAc,EAAE,CAAC;AACnB,CAAC;AAED,wHAAsB,EAAE,CAAC,eAAe,CAAC,kEAAS,CAAC,CAAC;;;;;;;;;;;;;;;;;;;;ACTX;AAQzC;IAAA;QACE,UAAK,GAAG,2BAA2B,CAAC;IACtC,CAAC;IAPD;QAAC,+EAAS,CAAC;YACT,QAAQ,EAAE,UAAU;YACpB,kCAAmC;YACnC,kCAAmC;SACpC,CAAC;;oBAAA;IAGF,mBAAC;AAAD,CAAC;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;ACVwD;AACjB;AACI;AACF;AAGe;AACI;AACQ;AAEZ;AAEH;AACR;AAGsC;AACH;AACD;AAuBhF;IACE,gDAAgD;IAChD;IACA,CAAC;IAxBH;QAAC,8EAAQ,CAAC;YACR,YAAY,EAAE;gBACZ,oEAAY;gBACZ,wGAAiB;gBACjB,2GAAmB;gBACnB,uGAAkB;gBAClB,+EAAe;aAChB;YACD,OAAO,EAAE;gBACP,gFAAa;gBACb,mEAAW;gBACX,iEAAU;gBACV,oBAAoB;gBACpB,wEAAa,CAAC,OAAO,CAAC;oBACpB,MAAM,EAAE,yCAAyC;iBAClD,CAAC;gBACF,6EAAS,CAAC,OAAO,EAAE;aACpB;YACD,SAAS,EAAE,CAAC,mFAAY,EAAE,2FAAe,CAAC;YAC1C,SAAS,EAAE,CAAC,oEAAY,CAAC;SAC1B,CAAC;;iBAAA;IAQF,gBAAC;AAAD,CAAC;;;;;;;;;;;;;;;;;;;;;AChD6E;AACL;AAUzE;IAME,8BAA8B;IAC9B,4BAAoB,eAAgC;QAAhC,oBAAe,GAAf,eAAe,CAAiB;QAL7C,WAAM,GAAY,KAAK,CAAC;IAM/B,CAAC;IAED,yCAAY,GAAZ,UAAa,KAAK;QAChB,OAAO,CAAC,GAAG,CAAC,KAAK,CAAC,CAAC;QACnB,IAAI,CAAC,gBAAgB,CAAC,eAAe,GAAG,KAAK,CAAC;QAC9C,EAAE,CAAC,CAAC,IAAI,CAAC,gBAAgB,CAAC,EAAE,KAAK,IAAI,CAAC,kBAAkB,CAAC,MAAM,CAAC,CAAC,CAAC;YAChE,MAAM,CAAC,IAAI,CAAC,MAAM,GAAG,IAAI,CAAC;QAC5B,CAAC;QACD,IAAI,CAAC,gBAAgB,GAAG,IAAI,CAAC,kBAAkB,CAAC,IAAI,CAAC,gBAAgB,CAAC,EAAE,EAAE,CAAC,CAAC;IAC9E,CAAC;IAED,qCAAQ,GAAR;QAAA,iBAMC;QALC,IAAI,CAAC,eAAe,CAAC,YAAY,EAAE,CAAC,SAAS,CAAC,aAAG;YAC/C,OAAO,CAAC,GAAG,CAAC,GAAG,CAAC,CAAC;YACjB,KAAI,CAAC,kBAAkB,GAAG,GAAG,CAAC;YAC9B,KAAI,CAAC,gBAAgB,GAAG,KAAI,CAAC,kBAAkB,CAAC,CAAC,CAAC,CAAC;QACrD,CAAC,CAAC,CAAC;IACL,CAAC;IApBD;QAAC,2EAAK,EAAE;;kEAAA;IAXV;QAAC,+EAAS,CAAC;YACT,QAAQ,EAAE,gBAAgB;YAC1B,kCAA+B;YAC/B,kCAA+B;SAChC,CAAC;;0BAAA;IA4BF,yBAAC;;AAAD,CAAC;;;;;;;;;;;;;;;;;;;;ACrC6E;AAQ9E;IAEE;IACA,CAAC;IAED,oCAAQ,GAAR;IACA,CAAC;IAZH;QAAC,+EAAS,CAAC;YACT,QAAQ,EAAE,eAAe;YACzB,QAAQ,EAAE,wBAAwB;YAClC,MAAM,EAAE,EAAE;SACX,CAAC;;yBAAA;IASF,wBAAC;AAAD,CAAC;;;;;;;;;;;;;;;;;;;;;;ACf6E;AACb;AACT;AASxD;IAKE,6BAAoB,YAA0B;QAA1B,iBAAY,GAAZ,YAAY,CAAc;QAJvC,cAAS,GAAG,KAAK,CAAC;QAClB,kBAAa,GAAG,IAAI,0EAAK,CAAC,CAAC,EAAE,OAAO,EAAE,CAAC,cAAc,CAAC,EAAE,IAAI,EAAE,OAAO,EAAE,CAAC,QAAQ,CAAC,CAAC;QAEhF,oBAAe,GAAY,CAAC,IAAI,CAAC,aAAa,CAAC,CAAC;QAEvD,+CAA+C;QAC/C,OAAO,CAAC,GAAG,CAAC,IAAI,CAAC,eAAe,CAAC,CAAC;IACpC,CAAC;IAEM,sCAAQ,GAAf,UAAgB,CAAC;QACf,IAAI,CAAC,SAAS,GAAG,IAAI,CAAC;IACxB,CAAC;IAEM,yCAAW,GAAlB,UAAmB,OAAO;QACxB,IAAI,CAAC,aAAa,GAAG,IAAI,CAAC,eAAe,CAAC,OAAO,CAAC,CAAC;QACnD,OAAO,CAAC,GAAG,CAAC,IAAI,CAAC,aAAa,CAAC,CAAC;IAClC,CAAC;IAEM,4CAAc,GAArB,UAAsB,QAAQ;QAC5B,OAAO,CAAC,GAAG,CAAC,QAAQ,EAAE,IAAI,CAAC,CAAC;IAC9B,CAAC;IAEM,oCAAM,GAAb;QACE,OAAO,CAAC,GAAG,CAAC,MAAM,CAAC,CAAC;IACtB,CAAC;IAED,sCAAQ,GAAR;QAAA,iBAMC;QALC,IAAI,CAAC,YAAY,CAAC,SAAS,EAAE,CAAC,SAAS,CAAC,aAAG;YACzC,KAAI,CAAC,eAAe,GAAG,GAAG,CAAC;QAC7B,CAAC,CAAC,CAAC;QACH,OAAO,CAAC,GAAG,CAAC,aAAa,CAAC,CAAC;QAC3B,wCAAwC;IAC1C,CAAC;IA7BD;QAAC,2EAAK,EAAE;;gEAAA;IAVV;QAAC,+EAAS,CAAC;YACT,QAAQ,EAAE,iBAAiB;YAC3B,kCAA2C;YAC3C,kCAA2C;SAC5C,CAAC;;2BAAA;IAoCF,0BAAC;;AAAD,CAAC;;;;;;;;;;;;;;;;;;;;AC7CmD;AAGpD;IAAA;IAKA,CAAC;IAJC,mCAAS,GAAT,UAAU,KAAK;QACb,IAAM,MAAM,GAAG,4BAA4B,CAAC;QAC5C,MAAM,CAAC,MAAM,CAAC,KAAK,CAAC,CAAC;IACvB,CAAC;IALH;QAAC,0EAAI,CAAC,EAAE,IAAI,EAAE,iBAAiB,EAAE,CAAC;;uBAAA;IAMlC,sBAAC;AAAD,CAAC;;;;;;;;;;ACRM,IAAM,WAAW,GAAG;IACzB,UAAU,EAAE,IAAI;CACjB,CAAC;;;;;;;;ACFF,8CAA8C,kBAAkB,eAAe,uBAAuB,EAAE,G;;;;;;;ACAxG,2BAA2B,6DAA6D,EAAE,qBAAqB,yBAAyB,EAAE,4BAA4B,8BAA8B,+BAA+B,uBAAuB,EAAE,G;;;;;;;ACA5P,8CAA8C,kBAAkB,eAAe,iBAAiB,EAAE,6CAA6C,mCAAmC,iBAAiB,2BAA2B,mCAAmC,eAAe,G;;;;;;;ACAhR,sRAAsR,OAAO,6P;;;;;;;ACA7R,oGAAoG,uBAAuB,2DAA2D,6CAA6C,qBAAqB,IAAI,6BAA6B,8VAA8V,mDAAmD,eAAe,iBAAiB,qBAAqB,IAAI,6BAA6B,8CAA8C,4CAA4C,wCAAwC,mCAAmC,4B;;;;;;;ACAr6B,+JAA+J,oBAAoB,4HAA4H,UAAU,6CAA6C,YAAY,8GAA8G,2BAA2B,yIAAyI,UAAU,uDAAuD,UAAU,oc","file":"main.bundle.js","sourcesContent":["export class Movie {\n  constructor(\n    public id: number,\n    public name: string,\n    public location: string[],\n    public author: string,\n    public lat: number,\n    public lng: number\n  ) { }\n}\n\n\n\n// WEBPACK FOOTER //\n// ./src/app/service/movies/mock-heroes.ts","import { Injectable } from '@angular/core';\nimport { Http, Response } from '@angular/http';\n\nimport { Observable } from 'rxjs/Observable';\nimport 'rxjs/add/operator/catch';\nimport 'rxjs/add/operator/map';\n\nimport { Movie } from './mock-heroes';\ndeclare var jQuery: any;\n\n@Injectable()\nexport class MovieService {\n  private movieUrl = 'https://data.sfgov.org/OData.svc/yitu-d5am';\n\n  constructor(private http: Http) {\n  }\n\n  public getMovies(): Observable<Movie[]> {\n    return this.http.get(this.movieUrl)\n      .map(this.extractData)\n      .catch(this.handleError);\n  }\n\n  private extractData(res: Response) {\n    const parser = new DOMParser();\n    const body = parser.parseFromString(res.text(), 'application/xml');\n    const entries = body.querySelectorAll('entry properties');\n    const movies = [];\n    for (let i = 0; i < entries.length; i++) {\n      const movie = entries[i].getElementsByTagName('title')[0].innerHTML;\n      const author = entries[i].getElementsByTagName('writer')[0].innerHTML;\n      let location = entries[i].getElementsByTagName('locations')[0].innerHTML;\n      location = location ? location : 'NA';\n      const length = Math.max(movies.length - 1, 0);\n      if (movies[length] && movie === movies[length].name) {\n        movies[length]['location'].push(location);\n      } else {\n        movies.push(new Movie(i, movie, [location], author, 37.7749, -122.4195));\n      }\n    }\n    return movies;\n  }\n\n\n  private handleError(error: Response | any) {\n    // In a real world app, we might use a remote logging infrastructure\n    let errMsg: string;\n    if (error instanceof Response) {\n      const body = error.json() || '';\n      const err = body.error || JSON.stringify(body);\n      errMsg = `${error.status} - ${error.statusText || ''} ${err}`;\n    } else {\n      errMsg = error.message ? error.message : error.toString();\n    }\n    console.error(errMsg);\n    return Observable.throw(errMsg);\n  }\n}\n\n\n\n// WEBPACK FOOTER //\n// ./src/app/service/movies/movie.service.ts","import { Injectable } from '@angular/core';\nimport { Http, Response } from '@angular/http';\n\nimport { Observable } from 'rxjs/Observable';\nimport 'rxjs/add/operator/catch';\nimport 'rxjs/add/operator/map';\n\nimport { Question } from './mock-question';\n\n\n@Injectable()\nexport class QuestionService {\n  private questionUrl = 'https://cdn.rawgit.com/';\n\n  constructor(private http: Http) {\n    this.questionUrl += 'santosh-suresh/39e58e451d724574f3cb/raw/784d83b460d6c0150e338c34713f3a1c2371e20a/assignment.json';\n  }\n\n  public getQuestions(): Observable<Question[]> {\n    return this.http.get(this.questionUrl)\n      .map(this.extractData)\n      .catch(this.handleError);\n  }\n\n  private extractData(res: Response) {\n    const questions = res.json();\n    questions.forEach((q, i) => q.id = i);\n    return questions;\n  }\n\n\n  private handleError(error: Response | any) {\n    // In a real world app, we might use a remote logging infrastructure\n    let errMsg: string;\n    if (error instanceof Response) {\n      const body = error.json() || '';\n      const err = body.error || JSON.stringify(body);\n      errMsg = `${error.status} - ${error.statusText || ''} ${err}`;\n    } else {\n      errMsg = error.message ? error.message : error.toString();\n    }\n    return Observable.throw(errMsg);\n  }\n}\n\n\n\n// WEBPACK FOOTER //\n// ./src/app/service/question/question.service.ts","function webpackEmptyContext(req) {\n\tthrow new Error(\"Cannot find module '\" + req + \"'.\");\n}\nwebpackEmptyContext.keys = function() { return []; };\nwebpackEmptyContext.resolve = webpackEmptyContext;\nmodule.exports = webpackEmptyContext;\nwebpackEmptyContext.id = 437;\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./src async\n// module id = 437\n// module chunks = 1","import { platformBrowserDynamic } from '@angular/platform-browser-dynamic';\nimport { enableProdMode } from '@angular/core';\nimport { environment } from './environments/environment';\nimport { AppModule } from './app/app.module';\n\nif (environment.production) {\n  enableProdMode();\n}\n\nplatformBrowserDynamic().bootstrapModule(AppModule);\n\n\n\n// WEBPACK FOOTER //\n// ./src/main.ts","import { Component } from '@angular/core';\nimport { NgbModule } from '@ng-bootstrap/ng-bootstrap';\n\n@Component({\n  selector: 'app-root',\n  templateUrl: './app.component.html',\n  styleUrls: ['./app.component.scss']\n})\nexport class AppComponent {\n  title = 'My first angular2 project';\n}\n\n\n\n// WEBPACK FOOTER //\n// ./src/app/app.component.ts","import { BrowserModule } from '@angular/platform-browser';\nimport { NgModule } from '@angular/core';\nimport { FormsModule } from '@angular/forms';\nimport { HttpModule } from '@angular/http';\nimport { Router, Routes } from '@angular/router';\n\nimport { AgmCoreModule } from 'angular2-google-maps/core';\nimport { MovieService } from './service/movies/movie.service';\nimport { QuestionService } from './service/question/question.service';\n\nimport { Number2Alphabet } from './pipes/number2alphabet';\n\nimport { NgbModule } from '@ng-bootstrap/ng-bootstrap';\nimport { AppComponent } from './app.component';\nimport { AppRoutingModule } from './app-router.module';\n\nimport { SimpleFormComponent } from './components/simple-form/simple-form.component';\nimport { NotFoundComponent } from './components/pageNotFound/not-found.component';\nimport { JiffleNowComponent } from './components/jiffleNow/jiffle-now.component';\n\n@NgModule({\n  declarations: [\n    AppComponent,\n    NotFoundComponent,\n    SimpleFormComponent,\n    JiffleNowComponent,\n    Number2Alphabet\n  ],\n  imports: [\n    BrowserModule,\n    FormsModule,\n    HttpModule,\n    // AppRoutingModule,\n    AgmCoreModule.forRoot({\n      apiKey: 'AIzaSyAy594QIrU6l8d8eQ3cluMxioYiHODqQvg'\n    }),\n    NgbModule.forRoot()\n  ],\n  providers: [MovieService, QuestionService],\n  bootstrap: [AppComponent]\n})\nexport class AppModule {\n  // Diagnostic only: inspect router configuration\n  constructor() {\n  }\n  // constructor(router: Router) {\n  //   console.log('Routes: ', JSON.stringify(router.config, undefined, 2));\n  // }\n}\n\n\n\n// WEBPACK FOOTER //\n// ./src/app/app.module.ts","import { Component, OnInit, Input, Output, EventEmitter } from '@angular/core';\nimport { QuestionService } from '../../service/question/question.service';\nimport { Question } from '../../service/question/mock-question';\n\n\n@Component({\n  selector: 'app-jiffle-now',\n  templateUrl: './jiffleNow.html',\n  styleUrls: ['./jiffleNow.scss']\n})\n\nexport class JiffleNowComponent implements OnInit {\n  public selectedQuestion: Question;\n  public submit: Boolean = false;\n  //  = new Question('waiting for questions', ['', '', ''], 1, 1);\n\n  @Input() questionCollection: Question[];\n  //  = [this.selectedQuestion];\n  constructor(private questionService: QuestionService) {\n  }\n\n  selectAnswer(value) {\n    console.log(value);\n    this.selectedQuestion.answerSubmitted = value;\n    if (this.selectedQuestion.id === this.questionCollection.length) {\n      return this.submit = true;\n    }\n    this.selectedQuestion = this.questionCollection[this.selectedQuestion.id++];\n  }\n\n  ngOnInit() {\n    this.questionService.getQuestions().subscribe(res => {\n      console.log(res);\n      this.questionCollection = res;\n      this.selectedQuestion = this.questionCollection[0];\n    });\n  }\n}\n\n\n\n// WEBPACK FOOTER //\n// ./src/app/components/jiffleNow/jiffle-now.component.ts","import { Component, OnInit, Input, Output, EventEmitter } from '@angular/core';\n\n@Component({\n  selector: 'app-not-found',\n  template: '<h1>404 not found</h1>',\n  styles: []\n})\n\nexport class NotFoundComponent implements OnInit {\n\n  constructor() {\n  }\n\n  ngOnInit() {\n  }\n}\n\n\n\n// WEBPACK FOOTER //\n// ./src/app/components/pageNotFound/not-found.component.ts","import { Component, OnInit, Input, Output, EventEmitter } from '@angular/core';\nimport { MovieService } from '../../service/movies/movie.service';\nimport { Movie } from '../../service/movies/mock-heroes';\nimport { AgmCoreModule } from 'angular2-google-maps/core';\n\n@Component({\n  selector: 'app-simple-form',\n  templateUrl: './simple-form.component.html',\n  styleUrls: ['./simple-form.component.scss']\n})\n\nexport class SimpleFormComponent implements OnInit {\n  public submitted = false;\n  public selectedMovie = new Movie(1, 'Rings', ['sanfransisco'], null, 37.7749, -122.4194);\n\n  @Input() movieCollection: Movie[] = [this.selectedMovie];\n  constructor(private movieService: MovieService) {\n    // this.movieCollection = [this.selectedMovie];\n    console.log(this.movieCollection);\n  }\n\n  public onSubmit(e) {\n    this.submitted = true;\n  }\n\n  public selectMovie(movieId) {\n    this.selectedMovie = this.movieCollection[movieId];\n    console.log(this.selectedMovie);\n  }\n\n  public selectLocation(location) {\n    console.log(location, this);\n  }\n\n  public submit() {\n    console.log('form');\n  }\n\n  ngOnInit() {\n    this.movieService.getMovies().subscribe(res => {\n      this.movieCollection = res;\n    });\n    console.log('simple form');\n    // this.select.emit(this.selectedMovie);\n  }\n}\n\n\n\n// WEBPACK FOOTER //\n// ./src/app/components/simple-form/simple-form.component.ts","import {  Pipe, PipeTransform } from '@angular/core';\n\n@Pipe({ name: 'number2Alphabet' })\nexport class Number2Alphabet implements PipeTransform {\n  transform(value) {\n    const string = 'ABCDEFGHIJKLMNOPQRSTUVWXYZ';\n    return string[value];\n  }\n}\n\n\n\n// WEBPACK FOOTER //\n// ./src/app/pipes/number2alphabet.ts","export const environment = {\n  production: true\n};\n\n\n\n// WEBPACK FOOTER //\n// ./src/environments/environment.ts","module.exports = \".sebm-google-map-container {\\n  height: 300px;\\n  width: 80%;\\n  text-align: center; }\\n\"\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./src/app/app.component.scss\n// module id = 712\n// module chunks = 1","module.exports = \".jiffle {\\n  background-image: url(\\\"/public/assets/screenshot.jpg\\\"); }\\n  .jiffle .answer {\\n    text-align: center; }\\n    .jiffle .answer span {\\n      display: inline-block;\\n      border: 1px solid #333;\\n      min-width: 15%; }\\n\"\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./src/app/components/jiffleNow/jiffleNow.scss\n// module id = 713\n// module chunks = 1","module.exports = \".sebm-google-map-container {\\n  height: 300px;\\n  width: 80%;\\n  float: right; }\\n\\n.ng-valid[required], .ng-valid.required {\\n  border-left: 5px solid #42A948;\\n  /* green */ }\\n\\n.ng-invalid:not(form) {\\n  border-left: 5px solid #a94442;\\n  /* red */ }\\n\"\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./src/app/components/simple-form/simple-form.component.scss\n// module id = 714\n// module chunks = 1","module.exports = \"<nav>\\n  <a routerLink=\\\"/main\\\" routerLinkActive=\\\"active\\\">Main</a>\\n  <a routerLink=\\\"/jiffleNow\\\" routerLinkActive=\\\"active\\\">Jiffle Now</a>\\n  <a routerLink=\\\"/uber\\\" routerLinkActive=\\\"active\\\">Uber</a>\\n</nav>\\n<h1 class=\\\"col-sm-12 text-center\\\">\\n  {{title}}\\n</h1>\\n<!-- this creates a google map on the page with the given lat/lng from -->\\n<!-- the component as the initial center of the map: -->\\n<div class=\\\"container-fluid\\\">\\n  <app-jiffle-now></app-jiffle-now>\\n</div>\\n<!-- Routed views go here -->\\n\"\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./src/app/app.component.html\n// module id = 715\n// module chunks = 1","module.exports = \"<div class=\\\"jiffle text-left\\\" *ngIf=\\\"selectedQuestion && !submit\\\">\\n  <p>Q. {{selectedQuestion.text}}</p>\\n  <p *ngFor=\\\"let option of selectedQuestion.options; let i = index\\\" class=\\\"text-left\\\">\\n    {{i | number2Alphabet}}. {{selectedQuestion.options[i]}}\\n  </p>\\n  <p class=\\\"answer box\\\">\\n    <span (click)=\\\"selectAnswer(1)\\\">A</span>\\n    <span (click)=\\\"selectAnswer(2)\\\">B</span>\\n    <span (click)=\\\"selectAnswer(3)\\\">C</span>\\n    <span (click)=\\\"selectAnswer(4)\\\">D</span>\\n  </p>\\n</div>\\n\\n<div class=\\\"jiffle text-left\\\" *ngIf=\\\"submit\\\">\\n  <div *ngFor=\\\"let question of questionCollection; let i = index\\\" class=\\\"text-left\\\">\\n    <p>Q. {{question.text}}</p>\\n    <!-- {{i | number2Alphabet}}. {{selectedQuestion.options[i]}} -->\\n    <p>\\n      <span>Selected answer: {{question.answerSubmitted | number2Alphabet}}</span>\\n      <span>Correcct answer: {{question.answer | number2Alphabet}}</span>\\n  </div>\\n</div>\\n\"\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./src/app/components/jiffleNow/jiffleNow.html\n// module id = 716\n// module chunks = 1","module.exports = \"<form #formData=\\\"ngForm\\\" class=\\\"form-inline\\\" (ngSubmit)=\\\"onSubmit()\\\">\\n  <div class=\\\"form-group\\\">\\n    <label for=\\\"Movie\\\">Movie: {{selectedMovie.name}}</label>\\n    <select #selectedMov class=\\\"form-control\\\" (change)=selectMovie(selectedMov.value)>\\n      <option value=\\\"{{movie.id}}\\\" *ngFor=\\\"let movie of movieCollection\\\">{{movie.name}}</option>\\n    </select>\\n  </div>\\n  <div class=\\\"form-group\\\">\\n    <label for=\\\"movie\\\">Select Location: {{selectedMovie.location[0]}}</label>\\n    <select #selectedLocation class=\\\"form-control\\\" (change)=selectLocation(selectedLocation.value)>\\n      <option value=\\\"{{location}}\\\" *ngFor=\\\"let location of selectedMovie.location\\\">{{location}}</option>\\n    </select>\\n  </div>\\n  <button type=\\\"submit\\\" class=\\\"btn btn-default\\\" [disabled]=\\\"!formData.form.valid\\\">Fetch location</button>\\n</form>\\n<div class=\\\"row text-center\\\">\\n  <sebm-google-map [latitude]=\\\"selectedMovie.lat\\\" [longitude]=\\\"selectedMovie.lng\\\" class=\\\"col-sm-12\\\">\\n    <sebm-google-map-marker [latitude]=\\\"selectedMovie.lat\\\" [longitude]=\\\"selectedMovie.lng\\\"></sebm-google-map-marker>\\n  </sebm-google-map>\\n</div>\\n\"\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./src/app/components/simple-form/simple-form.component.html\n// module id = 717\n// module chunks = 1"],"sourceRoot":""}